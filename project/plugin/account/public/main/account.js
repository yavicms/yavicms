!function i(o,a,r){function c(n,t){if(!a[n]){if(!o[n]){var e="function"==typeof require&&require;if(!t&&e)return e(n,!0);if(s)return s(n,!0);throw new Error("Cannot find module '"+n+"'")}t=a[n]={exports:{}};o[n][0].call(t.exports,function(t){var e=o[n][1][t];return c(e||t)},t,t.exports,i,o,a,r)}return a[n].exports}for(var s="function"==typeof require&&require,t=0;t<r.length;t++)c(r[t]);return c}({1:[function(t,e,n){"use strict";t("./inc/login"),t("./inc/forgot"),t("./inc/verify"),t("./inc/register"),t("./inc/reset-pass")},{"./inc/forgot":2,"./inc/login":3,"./inc/register":4,"./inc/reset-pass":5,"./inc/verify":6}],2:[function(t,e,n){"use strict";var i=t("../lib/template");page("/account/forgot",function(){i({title:"Quên mật khẩu ?",inputs:[{name:"login",text:"Email hoặc Số điện thoại"}],button:"Lấy mã",register:1},function(t){return ajax.post("/account/forgot",t.values).then(function(){cookie.time(3).set({login:t.values.login,verify:"forgot-pass"}),i.to("/account/verify")})})})},{"../lib/template":7}],3:[function(t,e,n){"use strict";var i=t("../lib/template");page(["/account/","/account/login"],function(){i.verify()||i({title:"Đăng nhập",inputs:[{name:"login",text:"Email hoặc Số điện thoại"},{name:"password",type:"password",text:"Mật khẩu"}],button:"Đăng nhập",redirect:{name:"forgot",text:"Quên mật khẩu ?"},register:1},function(t){return ajax.post("/account/login",t.values).then(function(t){switch(cookie.remove("login","verify"),cookie.time(30).set("token",t.data.token),document.location.pathname){case"/account":case"/account/":case"/account/login":document.location.href="/";break;default:document.location.reload()}})})})},{"../lib/template":7}],4:[function(t,e,n){"use strict";var i=t("../lib/template");page("/account/register",function(){i.verify()||i({title:"Đăng kí",inputs:[{name:"fullname",text:"Tên đầy đủ"},{name:"login",text:"Email hoặc Số điện thoại"},{name:"password",text:"Mật khẩu"}],button:"Đăng kí",redirect:{name:"login",text:"Đăng nhập"}},function(t){return ajax.put("/account/register",t.values).then(function(){cookie.time(3).set({login:t.values.login,verify:"register"}),i.to("/account/verify")})})})},{"../lib/template":7}],5:[function(t,e,n){"use strict";var i=t("../lib/template");page("/account/reset-pass",function(){if("reset-pass"!==cookie.get("verify"))return i.to("/account/forgot");i({title:"Đổi mật khẩu mới",inputs:[{name:"password",text:"Mật khẩu mới"},{name:"repassword",text:"Xác nhận mật khẩu"}],button:"Gửi"},function(t){return ajax.post("/account/reset-pass",t.values).then(function(t){cookie.remove("login","verify"),cookie.set("token",t.data.token,30),document.location.href="/"})})})},{"../lib/template":7}],6:[function(t,e,n){"use strict";var i=t("../lib/template");page("/account/verify",function(){var t={title:"Nhập mã xác nhận",button:"Gửi",inputs:[{name:"code",text:"Mã xác nhận"}]};cookie.has("login")||t.inputs.unshift({name:"login",text:"Email hoặc Số điện thoại"}),i(t,function(t){return t.values.login||(t.values.login=cookie.get("login")),ajax.post("/account/verify",t.values).then(function(t){var e=cookie.get("verify");switch(cookie.remove("login","verify"),cookie.time(30).set("token",t.data.token),e){case"forgot":i.to("/account/reset-pass");break;case"register":document.location.href="/"}})})})},{"../lib/template":7}],7:[function(t,e,n){"use strict";var i=yavi,u=i.user_validate,l=i.$notext;function f(t,i){var e,o,a,r;function c(t){a=t,o.button.disabled=t}function s(t){var e,n=o[t.name];switch(t.message){case"unknown":return void(document.location.href="/");case"error_verify":e=View('\n<div>\n    :: lang(message) ::\n    <div style="text-transform: lowercase;">\n        <span style="text-transform: capitalize;">:: lang("let") ::</span>\n        <a href="/account/verify" class="account-spa" style="padding:0 0.3em;">\n            :: lang("confirm") ::\n        </a>\n        <span>:: lang("now") ::</span>\n    </div>\n</div>\n',t),cookie.time(3).set({login:n.value,verify:"register"});break;default:e=lang(t.message)}r.find(".error").html(l),n?(n.focus(),n.next.html(e)):r.find("#form-error").html(lang(t.message)),c(!1)}f.signed()||(e=View('\n<div class="container">\n    <div class="header">:: title ::</div>\n    <form id="form-account">\n\n        ::\n        for (var i = 0, n = inputs.length, input; i < n; i++) {\n            input = inputs[i];\n        ::\n        <div class="group">\n            <label for="::input.name::">::input.text:::</label>\n            <input type="::input.type || \'text\'::" id="::input.name::" class="input" name="::input.name::">\n            <div class="error empty"></div>\n        </div>\n        :: } ::\n\n        <div class="group empty error" id="form-error"></div>\n\n        <div class="group relative action">\n            <span class=":: this.redirect ? \'absolute right center\' : \'block text center\' ::">\n                <button type="submit" name="button">:: button ::</button>\n            </span>\n            :: if(this.redirect){ ::\n            <span class="absolute left center">\n                <a class="account-spa" href="/account/:: redirect.name ::">:: redirect.text ::</a>\n            </span>\n            :: } ::\n        </div>\n    </form>\n    :: if(this.register){ ::\n    <div class="footer" style="font-size:1.1em;">\n        Hoặc <a class="account-spa" href="/account/register">tạo tài khoản mới</a>\n    </div>\n    :: } ::\n</div>\n',t),document.title=t.title,View.render("#account-location",e),(r=$(e)).on("click",".account-spa",function(t){t.preventDefault(),f.to(this.href)}),r.on("submit","form",function(t){var e,n;t.preventDefault(),a||(o=o||this,c(!0),e={},n=[],r.find(".input").each(function(){e[this.name]=this.value,n.push(this.name)}),u(e,n).then(function(t){return t.values.login=t.values[t.keys.login],t}).then(i).then(c).catch(s))}))}var o=new RegExp("^/account/(.*)");Object.defineProperties(f,{to:{writable:!1,value:function(t){load_page(t),history.pushState(null,l,t)}},verify:{writable:!1,value:function(){if("register"===cookie.get("verify"))return f.to("/account/verify"),1}},resetPass:{writable:!1,value:function(){if("reset-pass"===cookie.get("verify"))return f.to("/account/reset-pass"),1}},signed:{writable:!1,value:function(){return cookie.has("token")}}}),yavi.on("popstate",function(t){var e=document.location.pathname;load_page(o.test(e)?e:"/account/login")}),e.exports=f},{}]},{},[1]);